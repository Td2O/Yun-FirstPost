#include <ArduinoJson.h>
#include <Process.h>
int Creer = 0;
String ApiKey = "XXX";

String JsonEvenement = "";


void GetEvent(String IdEvent) {
  // Launch 'curl' command and get Arduino ascii art logo from the network
  // curl is command line program for transferring data using different internet protocols
  Serial.println("-----");
  Serial.println("'GetEvent' démarré");
  Process r;        // Create a process and call it 'r'
  r.begin("curl");
  r.addParameter("-v");
  //r.addParameter("-I");
  r.addParameter("https://api.airtable.com/v0/appfqkj7sz4JgkmZJ/Evenement/" + IdEvent + "?api_key=" + ApiKey);
  r.run();
  // A process output can be read with the stream methods
  while (r.available() > 0) {
    char c = r.read();
    Serial.print(c);
  }
  Serial.println("'LireEvent' - retour reçu");
  //Ensure the last bit of data is sent.
  Serial.flush();
  delay(5000);
}

void CreateEvent(String NomEvnt, String TypeEvnt, int MesureHumidite)
{
  Serial.println("-----");
  Serial.println("'CreateEvent' démarré");
  Process q;
  q.begin("curl");
  q.addParameter("-v");
  q.addParameter("-XPOST");
  q.addParameter("https://api.airtable.com/v0/appfqkj7sz4JgkmZJ/Evenement?api_key=" + ApiKey);
  //q.addParameter("https://api.airtable.com/v0/appfqkj7sz4JgkmZJ/Evenement");
  //q.addParameter("-H \"Authorization: Bearer " + ApiKey +"\"");
  q.addParameter("-H \"Content-type: application/json\"");
  q.addParameter("-d");
  JsonEvenement = "'{\"fields\": {\"Name\": \"";
  JsonEvenement += NomEvnt;
  JsonEvenement += "\",\"Type événement\": \"";
  JsonEvenement += TypeEvnt;
  JsonEvenement += "\",\"Mesure - humidité\": ";
  JsonEvenement += MesureHumidite;
  JsonEvenement += ",\"Pot\": ";
  JsonEvenement += "[\"recJiYcOz0lS8vOsN\"]";
  JsonEvenement += ",\"Sonde - Mesure\": ";
  JsonEvenement += "[\"rectLngEvcaZA9CR3\"]";
  JsonEvenement += ",\"Date / Heure\": \"";
  JsonEvenement += "2018-04-30T10:19:00.000Z";
  JsonEvenement += "\"},";
  JsonEvenement += "\"typecast\": true";
  JsonEvenement += "}'";
  q.addParameter(JsonEvenement);
  Serial.println(JsonEvenement);
  Serial.println();
  q.run();

  while (q.available() > 0) {
    char d = q.read();
    Serial.print(d);
  }

  Serial.println("'CreateEvent' - retour reçu");
  //Ensure the last bit of data is sent.
  Serial.flush();
  delay(5000);
}

void CreateEvent2()
{
  Serial.println("-----");
  Serial.println("'CreateEvent' démarré");
  Process q;
  q.begin("curl");
  q.addParameter("-v");
  q.addParameter("-XPOST");
  q.addParameter("https://api.airtable.com/v0/appfqkj7sz4JgkmZJ/Evenement?api_key=" + ApiKey);
  //q.addParameter("https://api.airtable.com/v0/appfqkj7sz4JgkmZJ/Evenement");
  //q.addParameter("-H \"Authorization: Bearer " + ApiKey +"\"");
  q.addParameter("-H \"Content-type: application/json\"");
  q.addParameter("-d");
  JsonEvenement = "'{\"fields\":{\"Name\":\"Test3004\",\"Date / Heure\":\"2017-05-08T10:19:00.000Z\",\"Type événement\":\"Mesure - Trop Humide\",\"Pot\":[\"recJiYcOz0lS8vOsN\"],\"Sonde - Mesure\":[\"rectLngEvcaZA9CR3\"],\"Mesure - humidité\":998},\"createdTime\":\"2017-06-06T18:09:23.000Z\"}'";
  q.addParameter(JsonEvenement);
  Serial.println(JsonEvenement);
  Serial.println();
  q.run();

  while (q.available() > 0) {
    char d = q.read();
    Serial.print(d);
  }

  Serial.println("\"CreateEvent2\" - retour reçu");
  //Ensure the last bit of data is sent.
  Serial.flush();
  delay(5000);
}

void setup() {
  // Initialize Bridge
  Bridge.begin();

  // Initialize Serial
  Serial.begin(9600);

  // Wait until a Serial Monitor is connected.
  while (!Serial);

  // run various example processes
  //runCurl();
  CreateEvent("Test646464", "Mesure - Trop sec", 140);
  GetEvent("recJZJ2TUM5huXBVq");
  CreateEvent2();
}

void loop() {
  // Do nothing here.
}

